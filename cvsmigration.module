<?php
// $Id$

/**
 * @file
 * Main implementation file for the CVS Migration module.
 */

/**
 * Produce an anonymous email address based on the CVS Username and
 * d.o {users}.uid.
 *
 * @param $uid
 *   The Drupal userid of the CVS User.
 * @param $cvs_user
 *   The CVS Username of the user.
 * @return
 *   An email address in the format: cvs_user@uid.no-reply.drupal.org.
 */
function cvsmigration_make_anonymized_address($uid, $username) {

  // In the scope of this project we shouldn't get empty or invalid
  // CVS usernames, but just in case:

  // - Convert invalid email characters to underscores.
  $invalid = '[^a-zA-Z0-9_\-\.\+\^!#\$%&*+\/\=\?\`\|\{\}~\']+';
  $valid_user = preg_replace("/$invalid/", '_', $username);

  // - Reset empty usernames to something sensible.
  if (empty($valid_user)) {
    $valid_user = "user_$uid";
  }

  // Format per: http://drupal.org/node/992802
  $anonymized_mail = "$valid_user@$uid.no-reply.drupal.org";

  return $anonymized_mail;
}

/**
 * Validates repository email preference.
 */
function cvsmigration_repomail_validate($form, &$form_state) {
  if (!valid_email_address($form_state['values']['repomail'])) {
    form_set_error('repomail', t('You must select a valid email address.'));
  }
}

/**
 * Update repository email preference.
 */
function cvsmigration_repomail_submit($form, &$form_state) {

  if (isset($form_state['values']['cvs_uid'])) {
    $uid = $form_state['values']['cvs_uid'];
  }
  else {
    global $user;
    $uid = $user->uid;
  }

  if (isset($form_state['values']['cvs_user'])) {
    $cvs_user = $form_state['values']['cvs_user'];
  }
  else {
    $cvs_user = $form['cvs']['cvs_user']['#value'];
  }
  $repomail = $form_state['values']['repomail'];

  $string_args = array(
    '%repomail' => $repomail,
    '%cvs_user' => $cvs_user,
  );

  // Update any CVS Usernames associated with this Drupal User
  if (db_result(db_query("SELECT COUNT(*) FROM {cvs_migration} WHERE uid = %d", array($uid)))) {
    db_query("UPDATE {cvs_migration} SET repomail = '%s' WHERE uid = %d", array($repomail, $uid));
    watchdog('user', 'Repository email for CVS user %cvs_user changed to %repomail.', $string_args, WATCHDOG_NOTICE);
    drupal_set_message(t('Repository email for CVS user %cvs_user changed to %repomail.', $string_args));
  }
  else {
    db_query("INSERT INTO {cvs_migration} (uid, cvs_user, repomail) VALUES (%d, '%s', '%s')", array($uid, $cvs_user, $repomail));
    watchdog('user', 'Added repository email %repomail for CVS user %cvs_user.', $string_args, WATCHDOG_NOTICE);
    drupal_set_message(t('Added repository email %repomail for CVS user %cvs_user.', $string_args));
  }

}

/**
 * Implements hook_form_alter().
 *
 * Overrides the CVS module's form to allow the user to edit the
 * preferred email address to associate with their CVS username(s).
 * The default email is cvs_user@uid.no-reply.drupal.org.
 */
function cvsmigration_form_cvs_user_edit_form_alter(&$form, $form_state) {
  $account = 0;
  $uid = 0;
  if (isset($form['cvs']['cvs_uid']['#value'])) {
    $uid = $form['cvs']['cvs_uid']['#value'];
    $account = user_load(array('uid' => $uid));
  }
  else {
    global $user;
    $uid = $user->uid;
    $account = $user;
  }
  if (isset($form['cvs']['cvs_user']['#value'])) {
    $cvs_user = $form['cvs']['cvs_user']['#value'];
  }
  else {
    $cvs_user = $form['cvs']['cvs_user']['#default_value'];
  }

  $options = array();

  // Prime the list with an anonymous email address (default selection).
  $repomail = cvsmigration_make_anonymized_address($uid, $account->name);
  $options[$repomail] = $repomail;
  $default_value = $repomail;

  // Add the user's primary account address.
  $options[$account->mail] = $account->mail;

  // Get a list of existing migration emails associated with this user.
  $result = db_query("SELECT cvs_user, repomail FROM {cvs_migration} WHERE uid = %d", array($uid));
  while ($row = db_fetch_object($result)) {
    $options[$row->repomail] = $row->repomail;

    // Override default with existing value for the active CVS username.
    if ($row->cvs_user == $cvs_user) {
      $default_value = $row->repomail;
    }
  }

  // If the Multiple Email module is installed, merge its addresses for
  // this user.
  if (module_exists('multiple_email')) {
    drupal_load('module', 'multiple_email');
    $addresses = multiple_email_load_addresses($uid);
    $options += array_combine($addresses[0], $addresses[0]);
  }

  $form['cvs']['repomail'] = array(
    '#type' => 'select',
    '#title' => t('Repository Email'),
    '#default_value' => $default_value,
    '#options' => array(
      '' => t('Please Select...'),
    ) + $options,
    '#description' => t('The address you select here will be when migrating CVS data to Git in order to map all of your historical CVS commits to proper git commit metadata (!explanation). That means the address will be semi-public (in the git metadata, but not vieweable over HTTP).  If you would prefer an anonymous email, select %default', array('!explanation' => '<a href="http://drupal.org/node/898816">explanation</a>', '%default' => $repomail)),
    '#required' => TRUE,
  );

  $form['#validate'][] = 'cvsmigration_repomail_validate';
  $form['#submit'][] = 'cvsmigration_repomail_submit';
}
